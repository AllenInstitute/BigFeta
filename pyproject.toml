[project]
name = "bigfeta"
description = "global alignment of features between images"
readme = "README.rst"
license = {file = "LICENSE"}
authors = [
  {name = "Dan Kapner"},
  {name = "Russel Torres"}
]
maintainers = [
  {name = "Russel Torres"}
]
requires-python = ">3.8,<3.12"
dynamic = ["version"]
dependencies = [
    "render-python>=2.2.1",
    "marshmallow<3.0",
    "argschema<2.0",
    "numpy",
    "scipy",
    "pymongo==3.11.1",
    "h5py",
    "matplotlib",
    "mpl_scatter_density",
    "descartes",
    "shapely",
    "pathos"
    # 'futures; python_version == "2.7"',
]

[project.urls]
Repository = "https://github.com/AllenInstitute/BigFeta.git"

[project.optional-dependencies]
test = [
    "coverage>=4.1",
    "mock>=2.0.0",
    "pep8>=1.7.0",
    # "pytest>4.6,<5.0",
    "pytest",
    "pytest-cov>=2.2.1",
    "pytest-pep8>=1.0.6",
    "pytest-xdist>=1.14",
    "flake8>=3.0.4",
    "pylint>=1.5.4",
    "jinja2",
]
pypi-build = [
    "build",
    "twine"
]

[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
py-modules = [
    "bigfeta"
]

[tool.setuptools_scm]
version_file = "bigfeta/_version.py"

# some downgrades from pixi's expectations
[tool.pixi.system-requirements]
linux = "5.0.0"
libc = "2.27"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.pypi-dependencies]
bigfeta = { path = ".", editable = true }

# conda-enabled features
[tool.pixi.feature.pixi-base.dependencies]
numpy = "*"
pandas = "*"
scipy = "*"
matplotlib = "*"
fast-histogram = "*"
petsc4py = "*"

[tool.pixi.environments]
test = ["test"]
conda = ["pixi-base"]
conda-test = ["pixi-base", "test"]
build = ["pypi-build"]

[tool.coverage.run]
omit = ["integration_tests/*"]

[tool.pixi.feature.test.tasks]
test = "pytest  --cov --cov-report=xml --junitxml=test-reports/test.xml"

[tool.pixi.feature.pypi-build.tasks]
pypi-build = "python -m build"
pypi-test-upload = "python -m twine upload --repository testpypi dist/*"
pypi-test-deploy = "python -m build && python -m twine upload --repository testpypi dist/*"
